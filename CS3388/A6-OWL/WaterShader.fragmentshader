#version 400

// Interpolated values from the vertex shaders
...

// Ouput data
out vec4 color_out;

uniform sampler2D waterTexture;

void phongColor() {

    // Light emission properties
    vec4 LightColor = vec4(1,1,1,1);

    // Material properties
    vec4 MaterialDiffuseColor = texture(waterTexture, ...);
    vec4 MaterialAmbientColor = vec4(0.2,0.2,0.2,modelcolor.a) * MaterialDiffuseColor;
    vec4 MaterialSpecularColor = vec4(0.7, 0.7, 0.7,modelcolor.a);


    ...


    color_out =
        // Ambient : simulates indirect lighting
        MaterialAmbientColor +
        // Diffuse : "color" of the object
        MaterialDiffuseColor * LightColor * cosTheta +
        // Specular : reflective highlight, like a mirror
        MaterialSpecularColor * LightColor * pow(cosAlpha,8);
}

void main(){
    phongColor();
}
