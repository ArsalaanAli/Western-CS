Answers for Lab 3
-----------------------------------------------



EXERCISE 1

1. Should instance variable interestRate be declared as static? Explain.
No, the instance variable should not be declared as static. This is because the variable may need to hold different values for each instance of the class and it cannot do that if it is declared as static.

2. Write the output from the test harness for class SavingsAccount. 
SavingsAccount: balance $115.0, interest rate 0.15


EXERCISE 2

3. Which method(s) of the class CheckingAccount demonstrate overriding? Which methods demonstrate overloading?
toString, Deposit and Withdraw are overriding the methods of their super class.

4. Is bacc0 = chacc1 legal? Why?
Yes, because chacc1 is a subclass of bacc0

5. Is chacc1 = bacc1 legal? Why?
No, because theyre are different types of objects

6. On which variables bacc1, chacc1, sacc1 was the invocation to method
deductFees() valid? Explain.
dedectFees() was valid on chacc1, this is because the CheckingAccount class has a dedeuctFees method while the rest of the classes don't.

7. Which compilation error(s) could be fixed through casting? Which one(s)
could not be fixed? Why?
the error on bacc1 was fixed through casting because Banking Account is a super class of Checking, so it can be casted as a checking class. The Savings Account is not a super of Checking so it cannot be converted.

8. Does the program run after deleting the line causing the compilation 
error? If the program crashed, why did it crash?
No, the program still has an exception. It is because bacc1 was declared as a bank account and not a checking account.

9. What was the runtime error obtained when changing super.deposit(amount)
to deposit(amount) in class CheckingAccount.java? 
There was a stack overflow caused by the infinite recursion of the deposit class.

10. How many times is method deposit invoked?
it is invoked 1024 times before the exception is thrown.


EXERCISE 3

11. Why does the compiler issue an error message when invoking newAcc.getTransactionCount()? Why does the compiler issue an error message when invoking newAcc.getInterestRate()?
Its because newAcc is of type BankAccount, the BankAccount class doesn't have a getTransactionCount() or a getInterestRate() method, so the compiler can't find those methods.


12. Can you tell whether in the statement String accountInfo = newAcc.toString(); the
method toString() being invoked is from the class CheckingAccount or from the class
SavingsAccount? Explain your answer.
No, its not possible to tell because those meothods are overriding each other, so you cant know which one will be called until the variable is declared.
